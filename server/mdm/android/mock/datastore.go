// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"context"
	"sync"

	"github.com/fleetdm/fleet/v4/server/mdm/android"
	"github.com/jmoiron/sqlx"
)

var _ android.Datastore = (*Datastore)(nil)

type CreateEnterpriseFunc func(ctx context.Context, userID uint) (uint, error)

type GetEnterpriseByIDFunc func(ctx context.Context, ID uint) (*android.EnterpriseDetails, error)

type GetEnterpriseBySignupTokenFunc func(ctx context.Context, signupToken string) (*android.EnterpriseDetails, error)

type GetEnterpriseFunc func(ctx context.Context) (*android.Enterprise, error)

type UpdateEnterpriseFunc func(ctx context.Context, enterprise *android.EnterpriseDetails) error

type DeleteAllEnterprisesFunc func(ctx context.Context) error

type DeleteOtherEnterprisesFunc func(ctx context.Context, ID uint) error

type NewAndroidHostFunc func(ctx context.Context, serverURL string, host *android.Host) (*android.Host, error)

type AndroidHostLiteFunc func(ctx context.Context, enterpriseSpecificID string) (*android.Host, error)

type UpdateAndroidHostFunc func(ctx context.Context, serverURL string, host *android.Host, fromEnroll bool) error

type BulkSetAndroidHostsUnenrolledFunc func(ctx context.Context) error

type CreateDeviceTxFunc func(ctx context.Context, tx sqlx.ExtContext, device *android.Device) (*android.Device, error)

type UpdateDeviceTxFunc func(ctx context.Context, tx sqlx.ExtContext, device *android.Device) error

type Datastore struct {
	CreateEnterpriseFunc        CreateEnterpriseFunc
	CreateEnterpriseFuncInvoked bool

	GetEnterpriseByIDFunc        GetEnterpriseByIDFunc
	GetEnterpriseByIDFuncInvoked bool

	GetEnterpriseBySignupTokenFunc        GetEnterpriseBySignupTokenFunc
	GetEnterpriseBySignupTokenFuncInvoked bool

	GetEnterpriseFunc        GetEnterpriseFunc
	GetEnterpriseFuncInvoked bool

	UpdateEnterpriseFunc        UpdateEnterpriseFunc
	UpdateEnterpriseFuncInvoked bool

	DeleteAllEnterprisesFunc        DeleteAllEnterprisesFunc
	DeleteAllEnterprisesFuncInvoked bool

	DeleteOtherEnterprisesFunc        DeleteOtherEnterprisesFunc
	DeleteOtherEnterprisesFuncInvoked bool

	NewAndroidHostFunc        NewAndroidHostFunc
	NewAndroidHostFuncInvoked bool

	AndroidHostLiteFunc        AndroidHostLiteFunc
	AndroidHostLiteFuncInvoked bool

	UpdateAndroidHostFunc        UpdateAndroidHostFunc
	UpdateAndroidHostFuncInvoked bool

	BulkSetAndroidHostsUnenrolledFunc        BulkSetAndroidHostsUnenrolledFunc
	BulkSetAndroidHostsUnenrolledFuncInvoked bool

	CreateDeviceTxFunc        CreateDeviceTxFunc
	CreateDeviceTxFuncInvoked bool

	UpdateDeviceTxFunc        UpdateDeviceTxFunc
	UpdateDeviceTxFuncInvoked bool

	mu sync.Mutex
}

func (ds *Datastore) CreateEnterprise(ctx context.Context, userID uint) (uint, error) {
	ds.mu.Lock()
	ds.CreateEnterpriseFuncInvoked = true
	ds.mu.Unlock()
	return ds.CreateEnterpriseFunc(ctx, userID)
}

func (ds *Datastore) GetEnterpriseByID(ctx context.Context, ID uint) (*android.EnterpriseDetails, error) {
	ds.mu.Lock()
	ds.GetEnterpriseByIDFuncInvoked = true
	ds.mu.Unlock()
	return ds.GetEnterpriseByIDFunc(ctx, ID)
}

func (ds *Datastore) GetEnterpriseBySignupToken(ctx context.Context, signupToken string) (*android.EnterpriseDetails, error) {
	ds.mu.Lock()
	ds.GetEnterpriseBySignupTokenFuncInvoked = true
	ds.mu.Unlock()
	return ds.GetEnterpriseBySignupTokenFunc(ctx, signupToken)
}

func (ds *Datastore) GetEnterprise(ctx context.Context) (*android.Enterprise, error) {
	ds.mu.Lock()
	ds.GetEnterpriseFuncInvoked = true
	ds.mu.Unlock()
	return ds.GetEnterpriseFunc(ctx)
}

func (ds *Datastore) UpdateEnterprise(ctx context.Context, enterprise *android.EnterpriseDetails) error {
	ds.mu.Lock()
	ds.UpdateEnterpriseFuncInvoked = true
	ds.mu.Unlock()
	return ds.UpdateEnterpriseFunc(ctx, enterprise)
}

func (ds *Datastore) DeleteAllEnterprises(ctx context.Context) error {
	ds.mu.Lock()
	ds.DeleteAllEnterprisesFuncInvoked = true
	ds.mu.Unlock()
	return ds.DeleteAllEnterprisesFunc(ctx)
}

func (ds *Datastore) DeleteOtherEnterprises(ctx context.Context, ID uint) error {
	ds.mu.Lock()
	ds.DeleteOtherEnterprisesFuncInvoked = true
	ds.mu.Unlock()
	return ds.DeleteOtherEnterprisesFunc(ctx, ID)
}

func (ds *Datastore) NewAndroidHost(ctx context.Context, serverURL string, host *android.Host) (*android.Host, error) {
	ds.mu.Lock()
	ds.NewAndroidHostFuncInvoked = true
	ds.mu.Unlock()
	return ds.NewAndroidHostFunc(ctx, serverURL, host)
}

func (ds *Datastore) AndroidHostLite(ctx context.Context, enterpriseSpecificID string) (*android.Host, error) {
	ds.mu.Lock()
	ds.AndroidHostLiteFuncInvoked = true
	ds.mu.Unlock()
	return ds.AndroidHostLiteFunc(ctx, enterpriseSpecificID)
}

func (ds *Datastore) UpdateAndroidHost(ctx context.Context, serverURL string, host *android.Host, fromEnroll bool) error {
	ds.mu.Lock()
	ds.UpdateAndroidHostFuncInvoked = true
	ds.mu.Unlock()
	return ds.UpdateAndroidHostFunc(ctx, serverURL, host, fromEnroll)
}

func (ds *Datastore) BulkSetAndroidHostsUnenrolled(ctx context.Context) error {
	ds.mu.Lock()
	ds.BulkSetAndroidHostsUnenrolledFuncInvoked = true
	ds.mu.Unlock()
	return ds.BulkSetAndroidHostsUnenrolledFunc(ctx)
}

func (ds *Datastore) CreateDeviceTx(ctx context.Context, tx sqlx.ExtContext, device *android.Device) (*android.Device, error) {
	ds.mu.Lock()
	ds.CreateDeviceTxFuncInvoked = true
	ds.mu.Unlock()
	return ds.CreateDeviceTxFunc(ctx, tx, device)
}

func (ds *Datastore) UpdateDeviceTx(ctx context.Context, tx sqlx.ExtContext, device *android.Device) error {
	ds.mu.Lock()
	ds.UpdateDeviceTxFuncInvoked = true
	ds.mu.Unlock()
	return ds.UpdateDeviceTxFunc(ctx, tx, device)
}
